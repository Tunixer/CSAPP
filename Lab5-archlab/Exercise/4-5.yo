                            | #long absSum(long *start, long count)
                            | # start in %rdi, count in %rsi
                            | # returned value in %rax
                            | 
                            | #long rsum(long *start, long count){
                            | #	if(count<=0){
                            | #		return 0;	
                            | #	}
                            | #	return  abs(*start)+rsum(start+1,count-1);
                            | #}
                            | 
0x000:                      | 	.pos	0
0x000: 30f40002000000000000 | 	irmovq	stack,%rsp
0x00a: 803800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
0x018:                      | 	.align 8
0x018:                      | array:
0x018: 0100000000000000     | 	.quad	0x0000000001
0x020: 0200000000000000     | 	.quad	0x0000000002
0x028: 0300000000000000     | 	.quad	0x0000000003
0x030: 0400000000000000     | 	.quad	0x0000000004
                            | 
                            | 
0x038:                      | main:
0x038: 30f71800000000000000 | 	irmovq	array,%rdi
0x042: 30f60400000000000000 | 	irmovq	$4,%rsi
0x04c: 805600000000000000   | 	call	absSum
0x055: 90                   | 	ret
                            | 
0x056:                      | absSum:
0x056: 30f80000000000000000 | 	irmovq	$0,%r8
0x060: 30f00000000000000000 | 	irmovq	$0,%rax
0x06a: 6086                 | 	addq	%r8, %rsi
0x06c: 747600000000000000   | 	jne	recur
0x075: 90                   | 	ret
0x076:                      | recur:
0x076: a03f                 | 	pushq	%rbx
0x078: a05f                 | 	pushq	%rbp
                            | 	#irmovq	$16,%r8
                            | 	#subq	%r8,%rsp
0x07a: 2075                 | 	rrmovq	%rdi,%rbp
0x07c: 50350000000000000000 | 	mrmovq	(%rbp), %rbx
0x086: 2037                 | 	rrmovq	%rbx,%rdi
0x088: 80bf00000000000000   | 	call	abs
0x091: 2003                 | 	rrmovq	%rax,%rbx
                            | #u = abs(*start)
0x093: 2057                 | 	rrmovq	%rbp,%rdi
0x095: 30f80100000000000000 | 	irmovq	$1,%r8
0x09f: 6186                 | 	subq	%r8,%rsi
0x0a1: 30f80800000000000000 | 	irmovq	$8,%r8
0x0ab: 6087                 | 	addq	%r8,%rdi
0x0ad: 805600000000000000   | 	call	absSum
0x0b6: 6003                 | 	addq	%rax,%rbx
                            | #u = u + absSum(start+1,count-1)
0x0b8: 2030                 | 	rrmovq	%rbx,%rax
0x0ba: b05f                 | 	popq	%rbp
0x0bc: b03f                 | 	popq	%rbx
                            | 	#irmovq	$16,%r8
                            | 	#addq	%r8,%rsp
0x0be: 90                   | 	ret
0x0bf:                      | abs:	
0x0bf: 2070                 | 	rrmovq	%rdi,%rax
0x0c1: 30f80000000000000000 | 	irmovq	$0,%r8
0x0cb: 6087                 | 	addq	%r8,%rdi
0x0cd: 72d700000000000000   | 	jl	pos
0x0d6: 90                   | 	ret
                            | #if x<0 then x = -x
0x0d7:                      | pos:
0x0d7: 30f80000000000000000 | 	irmovq	$0,%r8
0x0e1: 6180                 | 	subq	%r8,%rax
0x0e3: 90                   | 	ret
                            | 
0x200:                      | 	.pos 0x200
0x200:                      | stack:
                            | 	
